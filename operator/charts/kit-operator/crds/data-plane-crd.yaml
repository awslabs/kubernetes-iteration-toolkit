
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: dataplanes.kit.k8s.sh
spec:
  group: kit.k8s.sh
  names:
    kind: DataPlane
    listKind: DataPlaneList
    plural: dataplanes
    singular: dataplane
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DataPlane is the Schema for the DataPlanes API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              allocationStrategy:
                description: AllocationStrategy helps user define the strategy to
                  provision worker nodes in EC2, defaults to "lowest-price"
                type: string
              clusterName:
                description: ClusterName is used to connect the worker nodes to a
                  control plane clusterName.
                type: string
              instanceTypes:
                description: InstanceTypes is an optional field thats lets user specify
                  the instance types for worker nodes, defaults to instance types
                  "t2.xlarge", "t3.xlarge" or "t3a.xlarge"
                items:
                  type: string
                type: array
              nodeCount:
                description: NodeCount is the desired number of worker nodes for this
                  dataplane.
                type: integer
              subnetSelector:
                additionalProperties:
                  type: string
                description: SubnetSelector lets user define label key and values
                  for kit to select the subnets for worker nodes. It can contain key:value
                  to select subnets with particular label, or a specific key:"*" to
                  select all subnets with a specific key. If no selector is provided,
                  worker nodes are provisioned in the same subnet as control plane
                  nodes.
                type: object
            type: object
          status:
            properties:
              conditions:
                description: Conditions is the set of conditions required for this
                  DataPlane to create its objects, and indicates whether or not those
                  conditions are met.
                items:
                  description: 'Condition defines a readiness condition for a Knative
                    resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition
                        transitioned from one status to another. We use VolatileTime
                        in place of metav1.Time to exclude this from creating equality.Semantic
                        differences (all other things held constant).
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    severity:
                      description: Severity with which to treat failures of this type
                        of condition. When this is not specified, it defaults to Error.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
