---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: clusterloader2
spec:
  description: >-
    clusterloader2 task to run various types of cl2 tests on a given cluster.
  params:
  - name: giturl
    description: "git url to clone the package"
    default: https://github.com/kubernetes/perf-tests.git
  - name: version
    description: golang version to use for builds
    default: "latest"
  - name: GOOS
    description: "running program's operating system target"
    default: linux
  - name: GOARCH
    description: "running program's architecture target"
    default: amd64
  - name: GO111MODULE
    description: "value of module support"
    default: auto
  - name: GOCACHE
    description: "Go caching directory path"
    default: ""
  - name: GOMODCACHE
    description: "Go mod caching directory path"
    default: ""
  - name: GOPROXY
    default: direct
  - name: cluster-name
    description: name of the cluster 
    default: hakuna-matata
  - name: region
    description: region of the cluster
    default: us-west-2
  - name: endpoint
    description: "aws eks enpoint"
    default: https://api.us-west-2.wesley.amazonaws.com 
  - name: nodes-per-namespace
    description: "nodes per namespace to get created for load test "
    default: 10
  - name: cl2-load-test-throughput
    description: " throughput used for mutate operations"
    default: 10
  - name: pods-per-node
    description: "pod density"
    default: 10
  - name: nodes
    description: "number of dataplane nodes to run the load test against"
    default: 100
  workspaces:
  - name: source
  - name: config
  - name: secrets
    mountPath: /tekton/home/.aws
  steps:
  - name: write-kubeconfig
    image: amazon/aws-cli
    workingDir: $(workspaces.config.path)
    script: |
      aws sts get-caller-identity
      # get the kube config if not present in default location using 
      if [ ! -e $(workspaces.config.path)/kubeconfig ];then
          echo "kube config"
          aws eks --endpoint $(params.endpoint) update-kubeconfig --name $(params.cluster-name) --region $(params.region)
          cp -R /root/.kube/config  $(workspaces.config.path)/kubeconfig
      fi    
  - name: prepare-loadtest      
    image: docker.io/library/golang:$(params.version)
    workingDir: $(workspaces.source.path)
    script: |
      git clone $(params.giturl)
      if [ ! -e $GOPATH/src/k8s.io/perf-tests/clusterloader2/go.mod ];then
         SRC_PATH="$GOPATH/src/k8s.io/perf-tests"
         mkdir -p $SRC_PATH
         cp -R $(workspaces.source.path)/perf-tests/* $SRC_PATH
         cd $SRC_PATH
      fi
      cd clusterloader2
      GOPROXY=direct go build -o $(workspaces.source.path)/tmp/clusterloader  ./cmd/
  - name: run-loadtest
    image: amazon/aws-cli
    workingDir: $(workspaces.source.path)
    script: |
      cat > "$(workspaces.source.path)/tmp/overrides.yaml" <<EOL
      NODES_PER_NAMESPACE: $(params.nodes-per-namespace)
      CL2_LOAD_TEST_THROUGHPUT: $(params.cl2-load-test-throughput)
      CL2_USE_HOST_NETWORK_PODS: false
      PODS_PER_NODE: $(params.pods-per-node)
      SMALL_STATEFUL_SETS_PER_NAMESPACE: 0
      MEDIUM_STATEFUL_SETS_PER_NAMESPACE: 0
      CL2_ENABLE_PVS: false
      PROMETHEUS_SCRAPE_KUBE_PROXY: false
      ENABLE_SYSTEM_POD_METRICS: false
      NODE_MODE: master 
      EOL
      RESULT_DIR=$(workspaces.source.path)/tmp/results
      mkdir -p ${RESULT_DIR} 
      mkdir -p /root/.kube/
      cp $(workspaces.config.path)/kubeconfig /root/.kube/config
      cp -R /tekton/home/.aws /root/.aws
      export PATH=/tekton/home/.aws:$PATH
      curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
      install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
      kubectl version
      kubectl config current-context
      kubectl get nodes --kubeconfig=$(workspaces.config.path)/kubeconfig
      kubectl get nodes 
      kubectl get ns
      export ENABLE_EXEC_SERVICE=false
      $(workspaces.source.path)/tmp/clusterloader --kubeconfig $(workspaces.config.path)/kubeconfig --testconfig "$(workspaces.source.path)/perf-tests/clusterloader2/testing/load/config.yaml" --testoverrides $(workspaces.source.path)/tmp/overrides.yaml --nodes $(params.nodes) --provider "eks" --report-dir $RESULT_DIR --alsologtostderr
    env:
    - name: GOPROXY
      value: "$(params.GOPROXY)"
    - name: GOOS
      value: "$(params.GOOS)"
    - name: GOARCH
      value: "$(params.GOARCH)"
    - name: GO111MODULE
      value: "$(params.GO111MODULE)"
    - name: GOCACHE
      value: "$(params.GOCACHE)"
    - name: GOMODCACHE
      value: "$(params.GOMODCACHE)"
