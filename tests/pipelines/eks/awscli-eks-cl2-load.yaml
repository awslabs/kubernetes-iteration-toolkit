apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: awscli-eks-cl2loadtest
  namespace: tekton-pipelines
spec:
  description: |
    This pipeline sends slack notifcation before it spins up an EKS cluster with in it's own VPC 
    and runs cl2 loadtest and upload results to s3 and tearsdown the cluster and sends slack notification.
  params:
  - name: cluster-name
  - name: endpoint
  - name: servicerole
  - name: desired-nodes
  - name: host-cluster-node-role-arn
  - name: pods-per-node
  - name: nodes-per-namespace
  - name: cl2-load-test-throughput
  - name: results-bucket
  - name: slack-hook
  - name: slack-message
  - name: vpc-cfn-url
  - name: kubernetes-version
    default: "1.23"
  tasks:
  - name: slack-notification
    params:
    - name: slack-hook
      value: $(params.slack-hook)
    - name: slack-message
      value: "$(params.slack-message) job kicked off"
    taskRef:
      kind: Task
      name:  slack-notification
  - name: awscli-vpc-create
    params:
    - name: stack-name
      value: $(params.cluster-name)
    - name: vpc-cfn-url
      value: "$(params.vpc-cfn-url)"
    taskRef:
      kind: Task
      name:  awscli-vpc-create
  - name: create-eks-cluster
    params:
    - name: cluster-name
      value: $(params.cluster-name)
    - name: servicerole
      value: $(params.servicerole)
    - name: endpoint
      value: $(params.endpoint)
    - name: vpc-stack-name
      value: $(params.cluster-name)
    - name: kubernetes-version
      value: "$(params.kubernetes-version)"
    runAfter:
    - awscli-vpc-create
    taskRef:
      kind: Task
      name:  awscli-eks-cluster-create-with-vpc-stack
  - name: create-mng-nodes
    params:
    - name: cluster-name
      value: $(params.cluster-name)
    - name: desired-nodes
      value: $(params.desired-nodes)
    - name: host-cluster-node-role-arn
      value: $(params.host-cluster-node-role-arn)
    - name: endpoint
      value: $(params.endpoint)
    runAfter:
    - create-eks-cluster
    taskRef:
      kind: Task
      name:  awscli-eks-nodegroup-create
  - name: generate
    params:
    - name: pods-per-node
      value: $(params.pods-per-node)
    - name: nodes-per-namespace
      value: $(params.nodes-per-namespace)
    - name: cl2-load-test-throughput
      value: $(params.cl2-load-test-throughput)
    - name: results-bucket
      value: $(params.results-bucket)
    - name: nodes
      value: $(params.desired-nodes)
    - name: cluster-name
      value: $(params.cluster-name)
    - name: endpoint
      value: $(params.endpoint)
    runAfter:
    - create-mng-nodes
    taskRef:
      kind: Task
      name: load
  - name: cw-metrics
    params:
    - name: dimensions
      value: $(params.desired-nodes)
    - name: value
      value: $(tasks.generate.results.datapoint)
    - name: namespace
      value: $(params.kubernetes-version)
    runAfter:
      - generate
    taskRef:
      kind: Task
      name: cloudwatch
    workspaces:
    - name: source
      workspace: source
    - name: results
      workspace: results
  finally:    
  - name: teardown
    params:   
    - name: cluster-name
      value: $(params.cluster-name)
    - name: endpoint
      value: $(params.endpoint)
    - name: slack-hook
      value: $(params.slack-hook)
    - name: slack-message
      value: "$(params.slack-message) job completed"
    taskRef:
      kind: Task
      name:  awscli-eks-cluster-teardown
  workspaces:
  - name: source
  - name: results