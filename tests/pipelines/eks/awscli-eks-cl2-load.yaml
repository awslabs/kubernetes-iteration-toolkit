apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: awscli-eks-cl2loadtest
  namespace: tekton-pipelines
spec:
  description: |
    This pipeline sends slack notifcation before it spins up an EKS cluster with in it's own VPC 
    and runs cl2 loadtest and upload results to s3 and tearsdown the cluster and sends slack notification.
  params:
  - name: cluster-name
  - name: endpoint
  - name: desired-nodes
  - name: pods-per-node
  - name: nodes-per-namespace
  - name: cl2-load-test-throughput
  - name: results-bucket
  - name: slack-hook
  - name: slack-message
  - name: vpc-cfn-url
  - name: kubernetes-version
    default: "1.23"
  - name: amp-workspace-id
  - name: service-role-cfn-url
    default: "https://raw.githubusercontent.com/awslabs/kubernetes-iteration-toolkit/main/tests/assets/eks_service_role.json"
  - name: node-role-cfn-url
    default: "https://raw.githubusercontent.com/awslabs/kubernetes-iteration-toolkit/main/tests/assets/eks_node_role.json"
  tasks:
  - name: slack-notification
    params:
    - name: slack-hook
      value: $(params.slack-hook)
    - name: slack-message
      value: "$(params.slack-message) job kicked off"
    taskRef:
      kind: Task
      name:  slack-notification
  - name: awscli-vpc-create
    params:
    - name: stack-name
      value: $(params.cluster-name)
    - name: vpc-cfn-url
      value: "$(params.vpc-cfn-url)"
    taskRef:
      kind: Task
      name:  awscli-vpc-create
  - name: create-cluster-service-role
    params:
    - name: stack-name
      value: $(params.cluster-name)-service-role
    - name: role-cfn-url
      value: $(params.service-role-cfn-url)
    - name: role-name
      value: "$(params.cluster-name)-service-role"
    taskRef:
      kind: Task
      name: awscli-role-create
  - name: create-cluster-node-role
    params:
    - name: stack-name
      value: $(params.cluster-name)-node-role
    - name: role-cfn-url
      value: $(params.node-role-cfn-url)
    - name: role-name
      value: "$(params.cluster-name)-node-role"
    taskRef:
      kind: Task
      name: awscli-role-create
  - name: create-eks-cluster
    params:
    - name: cluster-name
      value: $(params.cluster-name)
    - name: service-role-name
      value: "$(params.cluster-name)-service-role"
    - name: endpoint
      value: $(params.endpoint)
    - name: vpc-stack-name
      value: $(params.cluster-name)
    - name: kubernetes-version
      value: "$(params.kubernetes-version)"
    runAfter:
    - create-cluster-node-role
    - create-cluster-service-role
    taskRef:
      kind: Task
      name:  awscli-eks-cluster-create-with-vpc-stack
  - name: create-mng-monitoring-nodes
    params:
    - name: cluster-name
      value: $(params.cluster-name)
    - name: host-cluster-node-role-name
      value: "$(params.cluster-name)-node-role"
    - name: endpoint
      value: $(params.endpoint)
    - name: desired-nodes
      value: "1"
    - name: max-nodes
      value: "1"
    - name: host-instance-types
      value: "m5.4xlarge"
    - name: host-taints
      value: "key=monitoring,value=true,effect=NO_SCHEDULE"
    - name: nodegroup-prefix
      value: "monitoring-"
    runAfter:
    - create-eks-cluster
    taskRef:
      kind: Task
      name:  awscli-eks-nodegroup-create
  - name: create-mng-nodes
    params:
    - name: cluster-name
      value: $(params.cluster-name)
    - name: desired-nodes
      value: $(params.desired-nodes)
    - name: host-cluster-node-role-name
      value: "$(params.cluster-name)-node-role"
    - name: endpoint
      value: $(params.endpoint)
    runAfter:
    - create-mng-monitoring-nodes
    taskRef:
      kind: Task
      name:  awscli-eks-nodegroup-create
  - name: install-fluentbit-addon
    params:
    - name: cluster-name
      value: $(params.cluster-name)
    - name: endpoint
      value: $(params.endpoint)
    runAfter:
    - create-mng-nodes
    taskRef:
      kind: Task
      name: eks-addon-fluentbit
  - name: generate
    params:
    - name: pods-per-node
      value: $(params.pods-per-node)
    - name: nodes-per-namespace
      value: $(params.nodes-per-namespace)
    - name: cl2-load-test-throughput
      value: $(params.cl2-load-test-throughput)
    - name: results-bucket
      value: $(params.results-bucket)
    - name: nodes
      value: $(params.desired-nodes)
    - name: cluster-name
      value: $(params.cluster-name)
    - name: endpoint
      value: $(params.endpoint)
    - name: amp-workspace-id
      value: '$(params.amp-workspace-id)'
    runAfter:
    - install-fluentbit-addon
    taskRef:
      kind: Task
      name: load
    workspaces:
    - name: source
      workspace: source
    - name: results
      workspace: results  
  - name: cw-metrics
    params:
    - name: dimensions
      value: $(params.desired-nodes)
    - name: value
      value: $(tasks.generate.results.datapoint)
    - name: namespace
      value: $(params.kubernetes-version)
    runAfter:
      - generate
    taskRef:
      kind: Task
      name: cloudwatch
  finally:    
  - name: teardown
    params:   
    - name: cluster-name
      value: $(params.cluster-name)
    - name: endpoint
      value: $(params.endpoint)
    - name: slack-hook
      value: $(params.slack-hook)
    - name: slack-message
      value: "$(params.slack-message) job completed"
    - name: service-role-stack-name
      value: $(params.cluster-name)-service-role
    - name: node-role-stack-name
      value: $(params.cluster-name)-node-role
    taskRef:
      kind: Task
      name:  awscli-eks-cluster-teardown
  workspaces:
  - name: source
  - name: results