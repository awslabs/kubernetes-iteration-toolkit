apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: awscli-eks-cl2loadtest-with-pod-identity
  namespace: scalability
spec:
  params:
  - name: cluster-name
  - name: endpoint
    default: https://api.beta.us-west-2.wesley.amazonaws.com
  - name: desired-nodes
    default: "1000"
  - name: cl2-eks-pod-identity-pods
    default: "5000"
  - name: cl2-default-qps
    default: "500"
  - name: cl2-default-burst
    default: "1000"
  - name: cl2-uniform-qps
    default: "500"
  - name: namespace-prefix
    default: "default"
  - name: namespaces
    default: "1"
  - name: results-bucket
  - name: slack-hook
  - name: slack-message
  - name: vpc-cfn-url
  - name: ng-cfn-url
    default: "https://raw.githubusercontent.com/awslabs/kubernetes-iteration-toolkit/main/tests/assets/eks_node_group_launch_template.json"
    type: string
  - name: kubernetes-version
    default: "1.31"
  - name: amp-workspace-id
    default: ""
  - name: service-role-cfn-url
    default: "https://raw.githubusercontent.com/awslabs/kubernetes-iteration-toolkit/main/tests/assets/eks_service_role.json"
  - name: node-role-cfn-url
    default: "https://raw.githubusercontent.com/awslabs/kubernetes-iteration-toolkit/main/tests/assets/eks_node_role.json"
  tasks:
  - name: slack-notification
    params:
    - name: slack-hook
      value: $(params.slack-hook)
    - name: slack-message
      value: "$(params.slack-message) job kicked off"
    taskRef:
      kind: Task
      name:  slack-notification
  - name: awscli-vpc-create
    params:
    - name: stack-name
      value: $(params.cluster-name)
    - name: vpc-cfn-url
      value: "$(params.vpc-cfn-url)"
    taskRef:
      kind: Task
      name:  awscli-vpc-create
  - name: create-cluster-service-role
    params:
    - name: stack-name
      value: $(params.cluster-name)-service-role
    - name: role-cfn-url
      value: $(params.service-role-cfn-url)
    - name: role-name
      value: "$(params.cluster-name)-service-role"
    taskRef:
      kind: Task
      name: awscli-role-create
  - name: create-cluster-node-role
    params:
    - name: stack-name
      value: $(params.cluster-name)-node-role
    - name: role-cfn-url
      value: $(params.node-role-cfn-url)
    - name: role-name
      value: "$(params.cluster-name)-node-role"
    taskRef:
      kind: Task
      name: awscli-role-create
  - name: create-eks-cluster
    params:
    - name: cluster-name
      value: $(params.cluster-name)
    - name: service-role-name
      value: "$(params.cluster-name)-service-role"
    - name: endpoint
      value: $(params.endpoint)
    - name: vpc-stack-name
      value: $(params.cluster-name)
    - name: kubernetes-version
      value: "$(params.kubernetes-version)"
    runAfter:
    - create-cluster-node-role
    - create-cluster-service-role
    - awscli-vpc-create
    taskRef:
      kind: Task
      name:  awscli-eks-cluster-create-with-vpc-stack
    workspaces:
    - name: config
      workspace: config
  - name: create-cfn-launch-template
    params:
      - name: cluster-name
        value: $(params.cluster-name)
      - name: stack-name
        value: $(params.cluster-name)-launch-template
      - name: kubernetes-version
        value: "$(params.kubernetes-version)"
      - name: ng-cfn-url
        value: "$(params.ng-cfn-url)"
      - name: endpoint
        value: $(params.endpoint)
    runAfter:
      - create-eks-cluster
    taskRef:
      kind: Task
      name: awscli-eks-cfn-launch-template
    workspaces:
      - name: config
        workspace: config
  - name: create-mng-monitoring-nodes
    params:
    - name: cluster-name
      value: $(params.cluster-name)
    - name: host-cluster-node-role-name
      value: "$(params.cluster-name)-node-role"
    - name: endpoint
      value: $(params.endpoint)
    - name: desired-nodes
      value: "1"
    - name: max-nodes
      value: "1"
    - name: host-instance-types
      value: "m5.4xlarge"
    - name: host-taints
      value: "key=monitoring,value=true,effect=NO_SCHEDULE"
    - name: nodegroup-prefix
      value: "monitoring-"
    runAfter:
    - create-cfn-launch-template
    taskRef:
      kind: Task
      name:  awscli-eks-nodegroup-create
    workspaces:
    - name: config
      workspace: config
  - name: install-fluentbit-addon
    params:
    - name: cluster-name
      value: $(params.cluster-name)
    runAfter:
    - create-mng-monitoring-nodes
    taskRef:
      kind: Task
      name: eks-addon-fluentbit
    workspaces:
    - name: config
      workspace: config
  - name: create-mng-nodes
    params:
    - name: cluster-name
      value: $(params.cluster-name)
    - name: desired-nodes
      value: $(params.desired-nodes)
    - name: host-cluster-node-role-name
      value: "$(params.cluster-name)-node-role"
    - name: endpoint
      value: $(params.endpoint)
    runAfter:
    - install-fluentbit-addon
    taskRef:
      kind: Task
      name:  awscli-eks-nodegroup-create
    workspaces:
    - name: config
      workspace: config
  - name: create-pod-identity-association
    params:
    - name: cluster-name
      value: $(params.cluster-name)
    - name: endpoint
      value: $(params.endpoint)
    - name: namespace-prefix
      value: $(params.namespace-prefix)
    - name: namespaces
      value: $(params.namespaces)
    runAfter:
    - create-mng-nodes
    taskRef:
      kind: Task
      name:  awscli-eks-pia-create
    workspaces:
    - name: config
      workspace: config
  - name: generate
    params:
    - name: cl2-eks-pod-identity-pods
      value: $(params.cl2-eks-pod-identity-pods)
    - name: cl2-default-qps
      value: $(params.cl2-default-qps)
    - name: cl2-default-burst
      value: $(params.cl2-default-burst)
    - name: cl2-uniform-qps
      value: $(params.cl2-uniform-qps)
    - name: results-bucket
      value: $(params.results-bucket)
    - name: nodes
      value: $(params.desired-nodes)
    - name: cluster-name
      value: $(params.cluster-name)
    - name: namespace-prefix
      value: $(params.namespace-prefix)
    - name: namespaces
      value: $(params.namespaces)
    - name: amp-workspace-id
      value: '$(params.amp-workspace-id)'
    runAfter:
    - create-pod-identity-association
    taskRef:
      kind: Task
      name: load-pod-identity
    workspaces:
    - name: source
      workspace: source
    - name: results
      workspace: results
    - name: config
      workspace: config
  - name: cw-metrics
    params:
    - name: dimensions
      value: $(params.desired-nodes)
    - name: value
      value: $(tasks.generate.results.datapoint)
    - name: namespace
      value: $(params.kubernetes-version)
    runAfter:
      - generate
    taskRef:
      kind: Task
      name: cloudwatch
  finally:
  - name: teardown
    retries: 10 # To deal with throttling during deletion
    params:
    - name: cluster-name
      value: $(params.cluster-name)
    - name: endpoint
      value: $(params.endpoint)
    - name: namespaces
      value: $(params.namespaces)
    - name: slack-hook
      value: $(params.slack-hook)
    - name: slack-message
      value: "$(params.slack-message) job completed"
    - name: service-role-stack-name
      value: $(params.cluster-name)-service-role
    - name: node-role-stack-name
      value: $(params.cluster-name)-node-role
    - name: launch-template-stack-name
      value: $(params.cluster-name)-launch-template
    taskRef:
      kind: Task
      name:  awscli-eks-cluster-teardown
  workspaces:
  - name: source
  - name: results
  - name: config
