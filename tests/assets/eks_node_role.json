{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Parameters": {
        "Name": {
            "Type": "String",
            "Default": "eks-node-role",
            "Description": "Names of the role."
        }
    },
    "Resources": {
        "RootRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "RoleName" : {
                    "Ref": "Name"
                },
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com",
                                    "eks-fargate-pods.amazonaws.com"
                                ]
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
                    "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
                    "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
                    "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore",
                    "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
                ],
                "Policies": [
                    {
                        "PolicyName": "InlinePolicy",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "acm:DescribeCertificate",
                                        "acm:ListCertificates",
                                        "acm:GetCertificate"
                                    ],
                                    "Resource": "*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "ec2:AuthorizeSecurityGroupIngress",
                                        "ec2:CreateSecurityGroup",
                                        "ec2:CreateTags",
                                        "ec2:DeleteTags",
                                        "ec2:DeleteSecurityGroup",
                                        "ec2:DescribeAccountAttributes",
                                        "ec2:DescribeAddresses",
                                        "ec2:DescribeInstances",
                                        "ec2:DescribeInstanceStatus",
                                        "ec2:DescribeInternetGateways",
                                        "ec2:DescribeNetworkInterfaces",
                                        "ec2:DescribeSecurityGroups",
                                        "ec2:DescribeSubnets",
                                        "ec2:DescribeTags",
                                        "ec2:DescribeVpcs",
                                        "ec2:ModifyInstanceAttribute",
                                        "ec2:ModifyNetworkInterfaceAttribute",
                                        "ec2:RevokeSecurityGroupIngress",
                                        "ec2:DescribeAvailabilityZones"
                                    ],
                                    "Resource": "*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "elasticloadbalancing:AddListenerCertificates",
                                        "elasticloadbalancing:AddTags",
                                        "elasticloadbalancing:CreateListener",
                                        "elasticloadbalancing:CreateLoadBalancer",
                                        "elasticloadbalancing:CreateRule",
                                        "elasticloadbalancing:CreateTargetGroup",
                                        "elasticloadbalancing:DeleteListener",
                                        "elasticloadbalancing:DeleteLoadBalancer",
                                        "elasticloadbalancing:DeleteRule",
                                        "elasticloadbalancing:DeleteTargetGroup",
                                        "elasticloadbalancing:DeregisterTargets",
                                        "elasticloadbalancing:DescribeListenerCertificates",
                                        "elasticloadbalancing:DescribeListeners",
                                        "elasticloadbalancing:DescribeLoadBalancers",
                                        "elasticloadbalancing:DescribeLoadBalancerAttributes",
                                        "elasticloadbalancing:DescribeRules",
                                        "elasticloadbalancing:DescribeSSLPolicies",
                                        "elasticloadbalancing:DescribeTags",
                                        "elasticloadbalancing:DescribeTargetGroups",
                                        "elasticloadbalancing:DescribeTargetGroupAttributes",
                                        "elasticloadbalancing:DescribeTargetHealth",
                                        "elasticloadbalancing:ModifyListener",
                                        "elasticloadbalancing:ModifyLoadBalancerAttributes",
                                        "elasticloadbalancing:ModifyRule",
                                        "elasticloadbalancing:ModifyTargetGroup",
                                        "elasticloadbalancing:ModifyTargetGroupAttributes",
                                        "elasticloadbalancing:RegisterTargets",
                                        "elasticloadbalancing:RemoveListenerCertificates",
                                        "elasticloadbalancing:RemoveTags",
                                        "elasticloadbalancing:SetIpAddressType",
                                        "elasticloadbalancing:SetSecurityGroups",
                                        "elasticloadbalancing:SetSubnets",
                                        "elasticloadbalancing:SetWebAcl"
                                    ],
                                    "Resource": "*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "iam:CreateServiceLinkedRole",
                                        "iam:GetServerCertificate",
                                        "iam:ListServerCertificates"
                                    ],
                                    "Resource": "*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "cognito-idp:DescribeUserPoolClient"
                                    ],
                                    "Resource": "*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "waf-regional:GetWebACLForResource",
                                        "waf-regional:GetWebACL",
                                        "waf-regional:AssociateWebACL",
                                        "waf-regional:DisassociateWebACL"
                                    ],
                                    "Resource": "*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "tag:GetResources",
                                        "tag:TagResources"
                                    ],
                                    "Resource": "*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "waf:GetWebACL"
                                    ],
                                    "Resource": "*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "wafv2:GetWebACL",
                                        "wafv2:GetWebACLForResource",
                                        "wafv2:AssociateWebACL",
                                        "wafv2:DisassociateWebACL"
                                    ],
                                    "Resource": "*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "shield:DescribeProtection",
                                        "shield:GetSubscriptionState",
                                        "shield:DeleteProtection",
                                        "shield:CreateProtection",
                                        "shield:DescribeSubscription",
                                        "shield:ListProtections"
                                    ],
                                    "Resource": "*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "aps:RemoteWrite",
                                        "aps:GetSeries",
                                        "aps:GetLabels",
                                        "aps:GetMetricMetadata"
                                    ],
                                    "Resource": "*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "iam:GetRole",
                                        "iam:PassRole",
                                        "iam:CreateServiceLinkedRole",
                                        "iam:ListAttachedRolePolicies",
                                        "kms:Encrypt",
                                        "kms:Decrypt",
                                        "eks:*",
                                        "s3:*"
                                    ],
                                    "Resource": [
                                        "*"
                                    ]
                                }
                            ]
                        }
                    }
                ]
            }
        }
    }
}