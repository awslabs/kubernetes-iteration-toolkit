
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.0
  creationTimestamp: null
  name: controlplanes.kit.k8s.amazonaws.com
spec:
  group: kit.k8s.amazonaws.com
  names:
    kind: ControlPlane
    listKind: ControlPlaneList
    plural: controlplanes
    singular: controlplane
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ControlPlane is the Schema for the ControlPlanes API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ControlPlaneSpec specifies the shape of the cluster and how components like master and etcd are configured to run. By default, KIT uses all the default values and ControlPlaneSpec can be empty.
            properties:
              etcd:
                description: ETCDSpec provides a way to configure the etcd nodes and args which are passed to the etcd process.
                properties:
                  ami:
                    type: string
                  args:
                    additionalProperties:
                      type: string
                    type: object
                  count:
                    type: integer
                  image:
                    type: string
                  type:
                    type: string
                type: object
              kubernetesVersion:
                type: string
              master:
                description: MasterSpec provides a way for the user to configure master instances and custom flags for components running on master nodes like apiserver, KCM and scheduler.
                properties:
                  ami:
                    type: string
                  apiServer:
                    description: Config provides a generic way to pass in args and images to master and etcd components. If a user wants to change the QPS they need to provide the following flag with the desired value -`kube-api-qps:100` in the args.
                    properties:
                      args:
                        additionalProperties:
                          type: string
                        type: object
                      image:
                        type: string
                    type: object
                  controllerManager:
                    description: Config provides a generic way to pass in args and images to master and etcd components. If a user wants to change the QPS they need to provide the following flag with the desired value -`kube-api-qps:100` in the args.
                    properties:
                      args:
                        additionalProperties:
                          type: string
                        type: object
                      image:
                        type: string
                    type: object
                  count:
                    type: integer
                  scheduler:
                    description: Config provides a generic way to pass in args and images to master and etcd components. If a user wants to change the QPS they need to provide the following flag with the desired value -`kube-api-qps:100` in the args.
                    properties:
                      args:
                        additionalProperties:
                          type: string
                        type: object
                      image:
                        type: string
                    type: object
                  type:
                    type: string
                type: object
              privateSubnets:
                items:
                  type: string
                type: array
              vpccidr:
                type: string
              zones:
                items:
                  type: string
                type: array
            type: object
          status:
            description: ControlPlaneStatus defines the observed state of the ControlPlane of a cluster
            properties:
              conditions:
                description: Conditions is the set of conditions required for this ControlPlane to create its objects, and indicates whether or not those conditions are met.
                items:
                  description: 'Conditions defines a readiness condition for a Knative resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition transitioned from one status to another. We use VolatileTime in place of metav1.Time to exclude this from creating equality.Semantic differences (all other things held constant).
                      type: string
                    message:
                      description: A human readable message indicating details about the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    severity:
                      description: Severity with which to treat failures of this type of condition. When this is not specified, it defaults to Error.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
