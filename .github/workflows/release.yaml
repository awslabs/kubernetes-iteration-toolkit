name: Release operator version, generates a new Docker image and helm charts
on:
  push:
    tags: ['v*']
  workflow_dispatch: {}
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
            ~/go/bin/
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - uses: docker/login-action@v1
        with:
          registry: public.ecr.aws
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        env:
          AWS_REGION: us-east-1
      - name: Install KO binary
        run: |
          VERSION=0.8.3
          OS=Linux
          ARCH=x86_64
          curl -L https://github.com/google/ko/releases/download/v${VERSION}/ko_${VERSION}_${OS}_${ARCH}.tar.gz | tar xzf - ko
          chmod +x ./ko
          mv ko /usr/local/bin/
      - name: Push to ECR public
        run: |
          make publish
        working-directory: operator
      - run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
      - uses: helm/chart-releaser-action@v1.1.0
        with:
          charts_dir: operator/charts
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

  release-cli:
    strategy:
      matrix:
        os: ["darwin"]
        arch: ["amd64"]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
          ~/go/bin/
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: Set env
      run: |
        echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
    - uses: actions/setup-go@v2
      with:
        go-version: '1.17.1'
    - name: Build the KIT CLI
      run: |
        GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -o ./bin/kitctl ./cmd/
        zip ./bin/kitctl_${{ env.RELEASE_VERSION }}_${{ matrix.os }}_${{ matrix.arch }}.zip -j ./bin/kitctl
      working-directory: substrate
    - name: Attach the binary to release
      uses: softprops/action-gh-release@v1
      with:
        files: "./substrate/bin/kitctl_${{ env.RELEASE_VERSION }}_${{ matrix.os }}_${{ matrix.arch }}.zip"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
